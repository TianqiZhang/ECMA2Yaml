### YamlMime:NetMember
type: operator
members:
- returns:
    description: Advanced class type of cat.
    type: <xref href="CatLibrary.Tom?alt=CatLibrary.Tom&text=Tom" data-throw-if-not-resolved="True"/>
  parameters:
  - name: src
    description: Instance of this class.
    type: <xref href="CatLibrary.Cat`2?alt=CatLibrary.Cat`2&text=Cat%3CT%2CK%3E" data-throw-if-not-resolved="True"/>
  uid: CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom
  commentId: M:CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom
  name: Explicit(Cat<T,K> to Tom)
  fullName: CatLibrary.Cat<T,K>.Explicit(Cat<T,K> to Tom)
  nameWithType: Cat<T,K>.Explicit(Cat<T,K> to Tom)
  syntax:
  - lang: csharp
    value: public static explicit operator CatLibrary.Tom (CatLibrary.Cat<T,K> src);
  monikers:
  - cat-1.0
  - cat-2.0
  summary: >-
    Expilicit operator of this class.

    <p>It means this cat can evolve to change to Tom. Tom and Jerry.</p>
  metadata: {}
uid: CatLibrary.Cat`2.op_Explicit*
commentId: Overload:CatLibrary.Cat`2.op_Explicit
namespace: CatLibrary
name: Explicit
fullName: CatLibrary.Cat<T,K>.Explicit
nameWithType: Cat<T,K>.Explicit
assemblies:
- CatLibrary
devLangs:
- csharp
monikers:
- cat-1.0
- cat-2.0
metadata:
  api_name:
  - CatLibrary.Cat`2.Explicit
  - CatLibrary.Cat`2.op_Explicit
  api_location:
  - CatLibrary.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - CatLibrary.Cat`2.op_Explicit
  - CatLibrary::Cat`2::op_Explicit
  helpviewer_keywords:
  - Cat<T,K>.Explicit operator [.NET]
  - Explicit operator [.NET], class Cat<T,K>
  - Cat<T,K>.Explicit(Cat<T,K> to Tom) operator [.NET]
  - Explicit(Cat<T,K> to Tom) operator [.NET], class Cat<T,K>
