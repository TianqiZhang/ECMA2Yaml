### YamlMime:NetMember
type: method
members:
- returns:
    description: Return cat tail's length.
    type: <xref href="System.Int64?alt=System.Int64&text=Int64" data-throw-if-not-resolved="True"/>
  parameters:
  - name: catName
    description: Thie represent for cat name length.
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>*
  - name: parameters
    description: Optional parameters.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>[]
  uid: CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])
  commentId: M:CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])
  name: GetTailLength(Int32*, Object[])
  fullName: CatLibrary.Cat<T,K>.GetTailLength(Int32*, Object[])
  nameWithType: Cat<T,K>.GetTailLength(Int32*, Object[])
  syntax:
  - lang: csharp
    value: public long GetTailLength (int* catName, params object[] parameters);
  monikers:
  - cat-1.0
  - cat-2.0
  summary: >-
    It's an <code data-dev-comment-type="c">unsafe</code> method.

    As you see, <code data-dev-comment-type="paramref">catName</code> is a <strong>pointer</strong>, so we need to add <code data-dev-comment-type="languageKeyword">unsafe</code> keyword.
  metadata: {}
uid: CatLibrary.Cat`2.GetTailLength*
commentId: Overload:CatLibrary.Cat`2.GetTailLength
namespace: CatLibrary
name: GetTailLength
fullName: CatLibrary.Cat<T,K>.GetTailLength
nameWithType: Cat<T,K>.GetTailLength
assemblies:
- CatLibrary
devLangs:
- csharp
monikers:
- cat-1.0
- cat-2.0
metadata:
  api_name:
  - CatLibrary.Cat`2.GetTailLength
  api_location:
  - CatLibrary.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - CatLibrary.Cat`2.GetTailLength
  - CatLibrary::Cat`2::GetTailLength
  helpviewer_keywords:
  - Cat<T,K>.GetTailLength method [.NET]
  - GetTailLength method [.NET], class Cat<T,K>
  - Cat<T,K>.GetTailLength(Int32*, Object[]) method [.NET]
  - GetTailLength(Int32*, Object[]) method [.NET], class Cat<T,K>
