trigger:
- master
- develop

pr:
- develop
- master

name: $(Date:yyyyMMdd)-$(Rev:r)

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'ECMA2Yaml/ECMA2Yaml.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Nuget Restore
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: Unit Tests
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  displayName: Integration Tests
  inputs:
    filePath: 'CI/devopsIntTest.ps1'

# Publish Artifacts for debug
- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: 'test'
    artifact: test
  condition: succeededOrFailed()

- task: EsrpCodeSigning@1
  displayName: Sign exe, dll and powershell files
  inputs:
    ConnectedServiceName: 'CodeSigning-APEX'
    FolderPath: '$(System.DefaultWorkingDirectory)'
    signType: 'batchSigning'
    batchSignPolicyFile: 'CodeSign_Executable.json'
    SessionTimeout: '60'
    MaxConcurrency: '100'
    MaxRetryAttempts: '5'

# Pack ECMA2Yaml
- task: PowerShell@2
  displayName: Nuget Pack ECMA2Yaml
  inputs:
    filePath: 'CI/devopsPack.ps1'

# Pack ECMAHelper
- task: MSBuild@1
  displayName: Nuget Pack ECMAHelper
  inputs:
    solution: 'ECMA2Yaml\ECMAHelper\ECMAHelper.csproj'
    configuration: 'Release'
    msbuildArguments: '-t:pack -p:PackageOutputPath=$(Build.SourcesDirectory)\_nuget\ECMAHelper -p:PackageVersion=$(CurrentPackageVersion)'

# Publish Nuget Package
- task: DotNetCoreCLI@2
  displayName: Nuget Publish ECMA2Yaml PPE
  condition: and(succeeded(), and(eq(variables['NeedNugetPush'], 'Yes'), eq(variables['NugetVersionType'], 'prerelease')))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.SourcesDirectory)/_nuget/ECMA2Yaml/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'AzureDevOps.Artifacts.docs-build-v2-ppe'
- task: DotNetCoreCLI@2
  displayName: Nuget Publish ECMA2Yaml
  condition: and(succeeded(), and(eq(variables['NeedNugetPush'], 'Yes'), eq(variables['NugetVersionType'], 'release')))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.SourcesDirectory)/_nuget/ECMA2Yaml/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'AzureDevOps.Artifacts.docs-build-v2-prod'
- task: DotNetCoreCLI@2
  displayName: Nuget Publish ECMAHelper
  condition: and(succeeded(), eq(variables['NeedNugetPush'], 'Yes'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.SourcesDirectory)/_nuget/ECMAHelper/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'docs-public-packages'
